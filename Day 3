Arrays:
An array is a collection of items stored at contiguous memory locations. The idea is to store multiple items of the same type together. This makes it easier to calculate the position of each element by simply adding an offset to a base value, i.e., the memory location of the first element of the array (generally denoted by the name of the array). The base value is index 0 and the difference between the two indexes is the offset.

#include <iostream>
using namespace std;
 
int main()
{
    // Creating an integer array
    // named arr of size 10.
    int arr[10];
    // accessing element at 0 index
    // and setting its value to 5.
    arr[0] = 5;
    // access and print value at 0
    // index we get the output as 5.
    cout << arr[0];
    return 0;
}
Applications on Array

Array stores data elements of the same data type.
Arrays are used when the size of the data set is known.
Used in solving matrices problem.
Applied as lookup table in computer.
Databases record are also implemented by array.
Helps in implementing sorting algorithm.
Different variable of same type can be saved under one name.
Arrays can be used for CPU scheduling.
Used to Implement other data structures like Stacks, Queues, Heaps, Hash tables, etc.


problems solved
Given an array A of size N of integers. Your task is to find the minimum and maximum elements in the array.

 

Example 1:

Input:
N = 6
A[] = {3, 2, 1, 56, 10000, 167}
Output:
min = 1, max =  10000
 

Example 2:

Input:
N = 5
A[]  = {1, 345, 234, 21, 56789}
Output:
min = 1, max = 56789
 

Your Task:  
You don't need to read input or print anything. Your task is to complete the function getMinMax() which takes the array A[] and its size N as inputs and returns the minimum and maximum element of the array.

 

Expected Time Complexity: O(N)
Expected Auxiliary Space: O(1)

 

Constraints:
1 <= N <= 105
1 <= Ai <=1012


code:
pair<long long, long long> getMinMax(long long a[], int n) {
  pair<long long,long long> p1;
   int min=a[0],max=a[0];
   for(int i=0;i<n;i++){
       if(min>a[i])
           min=a[i];
       if(max<a[i])
           max=a[i];
   }
   p1.first=min;
   p1.second=max;
   return p1;
}
